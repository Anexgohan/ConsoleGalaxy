name: Release Workflow

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
# check if the push is a release tag
  check-tags:
    runs-on: ubuntu-latest

    steps:
    - name: Check for release tag
      run: |
        if [[ "${{ github.ref }}" != refs/tags/* ]]; then
          echo "This is not a release tag. Exiting..."
          exit 1
        fi

# start the release jobs
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: check-tags
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

  # upload the release artifact to memory
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ConsoleGalaxy-${{ github.ref_name }}
        path: |
          data
          graphics
          jars
          mod_pictures
          sounds
          src
          consolegalaxy.version
          mod_info.json
          icon.png
          !.git
          !.github
          !.gradle
          !.idea
          !.run
          !build
          !libs
          !readme_resources
          !out

    - name: list files tag:1
      run: |
        cd ..
        ls -R

  # make a CHANGELOGS.md file
    - name: Create CHANGELOGS file
      run: |
        echo "Changes for version ${{ github.ref_name }}" > CHANGELOGS.md
        echo "==============================" >> CHANGELOGS.md
        git log -10 --pretty="format:Title: %s%n%nCommits:%n%b%nBy: %cn%nHash: %h%nDate: %aD%n----------------------------------%n" >> CHANGELOGS.md
    - name: Show CHANGELOGS
      run: cat CHANGELOGS.md
    - name: list files tag:2
      run: ls -R

  # echo the changelog to the output
    - name: Get changelog
      id: changelog
      # run: echo "::set-output name=changelog::$(cat CHANGELOGS.md)"
      run: |
        changelog=$(cat CHANGELOGS.md)
        if [[ -n "$changelog" ]]; then
          echo "changelog=$changelog" >> $GITHUB_ENV
        else
          echo "changelog=No changes" >> $GITHUB_ENV
        fi

  # create a release with the CHANGELOGS.md file  #   ${{ steps.changelog.outputs.changelog }}
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Changes for version ${{ github.ref_name }}
          ===============================
          ${{ env.changelog }}
        draft: false
        prerelease: false

  # upload the release artifact to the release page on github
    - name: upload release artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ConsoleGalaxy-${{ github.ref_name }}.zip
        asset_name: ConsoleGalaxy-${{ github.ref_name }}.zip
        asset_content_type: application/zip