# always update "mod_info.json" and "consolegalaxy.version" (version checker) file with the latest version number
name: Release Manager
on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*[a-z]?"
  #  pull_request:
  #    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  # --------------------  Prepare folder to be zipped --------------------
  Check-No-TAGs:
    name: Check has no Release TAG
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo No Release TAGs found, please provide a Release TAG
          exit 1
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
  Check-Has-TAGs:
    name: Check has a Release TAG
    needs: Check-No-TAGs
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - run: echo TAGs found, continue to next step...
  Evaluate-TAGs:
    name: Evaluate Tags
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [Check-No-TAGs, Check-Has-TAGs]
    steps:
      - name: Compare TAGs
        env:
          NEEDS: ${{ toJSON(needs) }}
        run: |
          echo "$NEEDS"

# --------------------  zip and publish --------------------
  pack-zip:
    name: Prepare Folder
    needs: Evaluate-TAGs
    runs-on: ubuntu-latest
    steps:
      - name: Hello World
        env:
          NEEDS: ${{ toJSON(needs) }}
        run: |
          echo "$NEEDS"
      - uses: actions/checkout@v3
        with:
          clean: false    # without this checkout deletes empty folders after each use
          #{{ github.ref_name }}
      - run: mkdir consolegalaxy_zipFolder
      - uses: actions/upload-artifact@v2
        with:
          name: consolegalaxy_temp
          path: |
            data
            graphics
            jars
            mod_pictures
            sounds
            src
            consolegalaxy.version
            mod_info.json
            icon.png
            !.git
            !.github
            !.gradle
            !.idea
            !.run
            !build
            !libs
            !readme_resources
      - name: List all upload-artifact folders only tag:1
        run: ls -R
      - name: check upload-artifact file log tag:2
        run: |
          cd
          ls -R
      # --------------------  copy server folder to working folder --------------------
      - uses: actions/checkout@v3
        with:
          clean: false
      - uses: actions/download-artifact@v3
        id: download_id
        with:
          name: consolegalaxy_temp
          path: "${{ github.workspace }}/consolegalaxy_zipFolder/Console Galaxy"               # ${{ github.workspace }}/consolegalaxy-${{ github.ref_name }}
      - name: 'Echo download path'
        run: echo ${{steps.download_id.outputs.download-path}}
      - name: check download-artifact file log
        run: |
          cd
          ls -R
      # --------------------  create zip file --------------------
      - uses: actions/checkout@v3
        with:
          clean: false
      #      - name: Create Zip from Folders
      #        uses: thedoctor0/zip-release@master
      #        with:
      #          type: 'zip'
      #          filename: "consolegalaxy_ppp"
      #          path: ${{github.workspace}}/consolegalaxy
      #          directory: ${{github.workspace}}/consolegalaxy
      #          exclusions: '*data* *graphics* *jars* *sounds* *src* *.git* /*node_modules/* .editorconfig *.github* *.gradle* *.idea* *.run* /*build/* /*gradle/* /*libs /*readme_resources .gitattributes .gitignore build.gradle.kts gradle* gradle.* package.json package-lock.json README.md'
      - uses: papeloto/action-zip@v1
        with:
          files: consolegalaxy_zipFolder/
          dest: consolegalaxy-${{ github.ref_name }}.zip
      # generates list of all files in root directory, download log from actions tab in github to view
      - name: check thedoctor0 zip file log
        run: |
          cd
          ls -R
      # --------------------  Generate Changelog --------------------
      - name: Install and run github-changelog-generator
        run: |
          sudo gem install github_changelog_generator
          github_changelog_generator -u Anexgohan -p ConsoleGalaxy --token ${{ secrets.GITHUB_TOKEN }} --since-tag v1.0.0a
      # --------------------  Upload zip to Github Release --------------------      
      - uses: actions/checkout@v3
        with:
          clean: false
      - name: Realease to Github Releases
        uses: ncipollo/release-action@v1
        with:
          name: ConsoleGalaxy-${{ github.ref_name }}             # Release post Title Name
          artifacts: ConsoleGalaxy-${{ github.ref_name }}.zip         # Release File name
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
      - name: check ncipollo file log
        run: |
          cd
          ls -R
